package com.qin.myutils.greendao.data;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.qin.myutils.greendao.data.Shop;
import com.qin.myutils.greendao.data.UserInfo;
import com.qin.myutils.retrofit.cookie.cookie.CookieResulte;

import com.qin.myutils.greendao.data.ShopDao;
import com.qin.myutils.greendao.data.UserInfoDao;
import com.qin.myutils.greendao.data.CookieResulteDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig shopDaoConfig;
    private final DaoConfig userInfoDaoConfig;
    private final DaoConfig cookieResulteDaoConfig;

    private final ShopDao shopDao;
    private final UserInfoDao userInfoDao;
    private final CookieResulteDao cookieResulteDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        shopDaoConfig = daoConfigMap.get(ShopDao.class).clone();
        shopDaoConfig.initIdentityScope(type);

        userInfoDaoConfig = daoConfigMap.get(UserInfoDao.class).clone();
        userInfoDaoConfig.initIdentityScope(type);

        cookieResulteDaoConfig = daoConfigMap.get(CookieResulteDao.class).clone();
        cookieResulteDaoConfig.initIdentityScope(type);

        shopDao = new ShopDao(shopDaoConfig, this);
        userInfoDao = new UserInfoDao(userInfoDaoConfig, this);
        cookieResulteDao = new CookieResulteDao(cookieResulteDaoConfig, this);

        registerDao(Shop.class, shopDao);
        registerDao(UserInfo.class, userInfoDao);
        registerDao(CookieResulte.class, cookieResulteDao);
    }
    
    public void clear() {
        shopDaoConfig.clearIdentityScope();
        userInfoDaoConfig.clearIdentityScope();
        cookieResulteDaoConfig.clearIdentityScope();
    }

    public ShopDao getShopDao() {
        return shopDao;
    }

    public UserInfoDao getUserInfoDao() {
        return userInfoDao;
    }

    public CookieResulteDao getCookieResulteDao() {
        return cookieResulteDao;
    }

}
